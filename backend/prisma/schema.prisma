// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  Profile Profile?

  Threads Thread[]

  Likes Like[]

  Followers Follow[] @relation("FollowerToUser")

  Followeds Follow[] @relation("FollowedToUser")

  Reposts Repost[]
}

model Profile {
  id         String  @id @default(uuid())
  username   String  @unique
  bio        String?
  profilePic String?

  User   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Thread {
  id       String   @id @default(uuid())
  content  String
  pictures String[]

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Parent   Thread?  @relation("ThreadToThread", fields: [parentId], references: [id])
  parentId String?
  Children Thread[] @relation("ThreadToThread")

  Likes Like[]

  Reposts Repost[]

  Quoted   Thread?  @relation("QuotedToThread", fields: [quotedId], references: [id])
  quotedId String?
  Quoters  Thread[] @relation("QuotedToThread")
}

model Like {
  id String @id @default(uuid())

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Thread   Thread @relation(fields: [threadId], references: [id])
  threadId String
}

model Follow {
  id String @id @default(uuid())

  Follower   User   @relation("FollowerToUser", fields: [followerId], references: [id])
  followerId String

  Followed   User   @relation("FollowedToUser", fields: [followedId], references: [id])
  followedId String
}

model Repost {
  id String @id @default(uuid())

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Thread   Thread @relation(fields: [threadId], references: [id])
  threadId String
}
